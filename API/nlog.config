<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Database"/>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target name="database" xsi:type="Database">
			<dbProvider>Npgsql.NpgsqlConnection, Npgsql</dbProvider>
			<connectionString>${gdc:connectionString}</connectionString>
			
			<commandText>
				insert into public."LogEntries" ("Application", "CreateDate", "Level", "Message", "Logger", "Callsite", "Exception")
				values (@Application, to_timestamp(@CreateDate, 'YYYY-MM-DD HH24:MI:SS'), @Level, @Message, @Logger, @Callsite, @Exception);
			</commandText>
			
			<parameter name="@application" layout="AspNetCoreNlog" />
			<parameter name="@createdate" layout="${date:universalTime=true:format=yyyy-MM-dd HH\:mm\:ss}" />
			<parameter name="@level" layout="${level}" />
			<parameter name="@message" layout="url: ${aspnet-request-url} | action: ${aspnet-mvc-action} | ${message}" />
			<parameter name="@logger" layout="${logger}" />
			<parameter name="@callSite" layout="${callsite:filename=true}" />
			<parameter name="@exception" layout="${exception:tostring}" />
		</target>


		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="lifetimeConsole" />
		<logger name="*" minlevel="Debug" writeTo="database" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />
	</rules>
</nlog>